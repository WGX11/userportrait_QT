{"remainingRequest":"D:\\Project\\userportrait_QT\\user-portrait-for-qt-master\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\Project\\userportrait_QT\\user-portrait-for-qt-master\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\Project\\userportrait_QT\\user-portrait-for-qt-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project\\userportrait_QT\\user-portrait-for-qt-master\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\Project\\userportrait_QT\\user-portrait-for-qt-master\\frontend\\src\\views\\new\\GroupProfile.vue?vue&type=template&id=0fdef5f3&scoped=true","dependencies":[{"path":"D:\\Project\\userportrait_QT\\user-portrait-for-qt-master\\frontend\\src\\views\\new\\GroupProfile.vue","mtime":1699352770654},{"path":"D:\\Project\\userportrait_QT\\user-portrait-for-qt-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1699426402170},{"path":"D:\\Project\\userportrait_QT\\user-portrait-for-qt-master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1699426403263},{"path":"D:\\Project\\userportrait_QT\\user-portrait-for-qt-master\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1699426404444},{"path":"D:\\Project\\userportrait_QT\\user-portrait-for-qt-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1699426402170},{"path":"D:\\Project\\userportrait_QT\\user-portrait-for-qt-master\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1699426402439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgd2l0aEN0eCBhcyBfd2l0aEN0eCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHdpdGhTY29wZUlkIGFzIF93aXRoU2NvcGVJZCwgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCl9wdXNoU2NvcGVJZCgiZGF0YS12LTBmZGVmNWYzIik7Cgp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImNvbnRhaW5lciIKfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIueUn+aIkOeUu+WDjyIpOwoKdmFyIF9ob2lzdGVkXzMgPSB7CiAgY2xhc3M6ICJ0b3AtMSIsCiAgcmVmOiAicGllX2NoYXJ0XzEiCn07CnZhciBfaG9pc3RlZF80ID0gewogIGNsYXNzOiAidG9wLTIiLAogIHJlZjogInBpZV9jaGFydF8yIgp9Owp2YXIgX2hvaXN0ZWRfNSA9IHsKICBjbGFzczogInRvcC0zIiwKICByZWY6ICJwaWVfY2hhcnRfMyIKfTsKdmFyIF9ob2lzdGVkXzYgPSB7CiAgY2xhc3M6ICJ0b3AtNCIsCiAgcmVmOiAicGllX2NoYXJ0XzQiCn07CnZhciBfaG9pc3RlZF83ID0gewogIGNsYXNzOiAidG9wLTUiLAogIHJlZjogImJhcl9jaGFydCIKfTsKdmFyIF9ob2lzdGVkXzggPSB7CiAgY2xhc3M6ICJjaXJjbGUiLAogIHJlZjogImJlaGF2aW9yX2R1cmF0aW9uX2NoYXJ0Igp9Owp2YXIgX2hvaXN0ZWRfOSA9IHsKICBjbGFzczogImJvdHRvbS0xIiwKICByZWY6ICJzdGFja19iYXJfY2hhcnQiCn07CgpfcG9wU2NvcGVJZCgpOwoKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9lbF9vcHRpb24gPSBfcmVzb2x2ZUNvbXBvbmVudCgiZWwtb3B0aW9uIik7CgogIHZhciBfY29tcG9uZW50X2VsX3NlbGVjdCA9IF9yZXNvbHZlQ29tcG9uZW50KCJlbC1zZWxlY3QiKTsKCiAgdmFyIF9jb21wb25lbnRfZWxfYnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoImVsLWJ1dHRvbiIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfc2VsZWN0LCB7CiAgICBtb2RlbFZhbHVlOiAkZGF0YS5jcm93ZF9pZCwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkZGF0YS5jcm93ZF9pZCA9ICRldmVudDsKICAgIH0pLAogICAgcGxhY2Vob2xkZXI6ICLor7fpgInmi6nnlKjmiLfnvqQiCiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJGRhdGEuY3Jvd2RzLCBmdW5jdGlvbiAoY3Jvd2QpIHsKICAgICAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9lbF9vcHRpb24sIHsKICAgICAgICAgIGtleTogY3Jvd2QuY3Jvd2RfaWQsCiAgICAgICAgICBsYWJlbDogY3Jvd2QuY3Jvd2RfbmFtZSwKICAgICAgICAgIHZhbHVlOiBjcm93ZC5jcm93ZF9pZAogICAgICAgIH0sIG51bGwsIDgKICAgICAgICAvKiBQUk9QUyAqLwogICAgICAgICwgWyJsYWJlbCIsICJ2YWx1ZSJdKTsKICAgICAgfSksIDEyOAogICAgICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICAgICApKV07CiAgICB9KSwKICAgIF86IDEKICAgIC8qIFNUQUJMRSAqLwoKICB9LCA4CiAgLyogUFJPUFMgKi8KICAsIFsibW9kZWxWYWx1ZSJdKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfZWxfYnV0dG9uLCB7CiAgICB0eXBlOiAicHJpbWFyeSIsCiAgICBzdHlsZTogewogICAgICAibWFyZ2luLWxlZnQiOiAiNXB4IgogICAgfSwKICAgIG9uQ2xpY2s6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMubG9hZF9jcm93ZF9wcm9maWxlKCk7CiAgICB9KQogIH0sIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfaG9pc3RlZF8yXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zLCBudWxsLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNCwgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzUsIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF82LCBudWxsLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNywgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzgsIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF85LCBudWxsLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKV0pOwp9"},{"version":3,"sources":["D:\\Project\\userportrait_QT\\user-portrait-for-qt-master\\frontend\\src\\views\\new\\GroupProfile.vue"],"names":[],"mappings":";;;;;AACS,EAAA,KAAK,EAAC;;;+CAI0E,M;;;AAE5E,EAAA,KAAK,EAAC,O;AAAS,EAAA,GAAG,EAAC;;;AAGnB,EAAA,KAAK,EAAC,O;AAAQ,EAAA,GAAG,EAAC;;;AAGlB,EAAA,KAAK,EAAC,O;AAAQ,EAAA,GAAG,EAAC;;;AAGlB,EAAA,KAAK,EAAC,O;AAAQ,EAAA,GAAG,EAAC;;;AAGlB,EAAA,KAAK,EAAC,O;AAAQ,EAAA,GAAG,EAAC;;;AAGlB,EAAA,KAAK,EAAC,Q;AAAS,EAAA,GAAG,EAAC;;;AAGnB,EAAA,KAAK,EAAC,U;AAAW,EAAA,GAAG,EAAC;;;;;;;;;;;;uBAxB9B,mBAAA,CA2BM,KA3BN,EAAA,UAAA,EA2BM,CA1BF,YAAA,CAEY,oBAFZ,EAEY;gBAFQ,KAAA,CAAA,QAER;;aAFQ,KAAA,CAAA,QAAA,GAAQ,M;MAEhB;AAFkB,IAAA,WAAW,EAAC;AAE9B,GAFZ,E;sBACe;AAAA,aAAuB,E,kBAAlC,mBAAA,CAAuH,SAAvH,EAAuH,IAAvH,EAAuH,WAAA,CAA5F,KAAA,CAAA,MAA4F,EAAtF,UAAf,KAAe,EAAV;6BAAvB,YAAA,CAAuH,oBAAvH,EAAuH;AAAnF,UAAA,GAAG,EAAE,KAAK,CAAC,QAAwE;AAA7D,UAAA,KAAK,EAAE,KAAK,CAAC,UAAgD;AAAnC,UAAA,KAAK,EAAE,KAAK,CAAC;AAAsB,SAAvH,E,IAAA,E;;AAAA,U,kBAAA,C;OAAuH,CAAvH,E;;AAAA,OAAkC,EAAvB;AAAA,K;;;;GADf,E;;AAAA,I,cAAA,CA0BE,EAvBF,YAAA,CAAiG,oBAAjG,EAAiG;AAAtF,IAAA,IAAI,EAAC,SAAiF;AAAvE,IAAA,KAAwB,EAAxB;AAAA,qBAAA;AAAA,KAAuE;AAA7C,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,kBAAA,EAAF;AAAA,KAAA;AAAwC,GAAjG,E;sBAAiF;AAAA,aAAI,C,UAAA,CAAJ;AAAA,K;;;;GAAjF,CAuBE,EArBF,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,IAFN,EAEM;AAAA;AAFN,GAqBE,EAlBF,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,IAFN,EAEM;AAAA;AAFN,GAkBE,EAfF,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,IAFN,EAEM;AAAA;AAFN,GAeE,EAZF,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,IAFN,EAEM;AAAA;AAFN,GAYE,EATF,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,IAFN,EAEM;AAAA;AAFN,GASE,EANF,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,IAFN,EAEM;AAAA;AAFN,GAME,EAHF,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,IAFN,EAEM;AAAA;AAFN,GAGE,CA3BN,C","sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <el-select v-model=\"crowd_id\" placeholder=\"请选择用户群\">\r\n            <el-option v-for=\"crowd in crowds\" :key=\"crowd.crowd_id\" :label=\"crowd.crowd_name\" :value=\"crowd.crowd_id\"></el-option>\r\n        </el-select>\r\n        <el-button type=\"primary\" style=\"margin-left: 5px\" @click=\"load_crowd_profile()\">生成画像</el-button>\r\n\r\n        <div class=\"top-1\"  ref=\"pie_chart_1\">\r\n\r\n        </div>\r\n        <div class=\"top-2\" ref=\"pie_chart_2\">\r\n\r\n        </div>\r\n        <div class=\"top-3\" ref=\"pie_chart_3\">\r\n\r\n        </div>\r\n        <div class=\"top-4\" ref=\"pie_chart_4\">\r\n\r\n        </div>\r\n        <div class=\"top-5\" ref=\"bar_chart\">\r\n\r\n        </div>\r\n        <div class=\"circle\" ref=\"behavior_duration_chart\">\r\n\r\n        </div>\r\n        <div class=\"bottom-1\" ref=\"stack_bar_chart\" >\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n    name: \"GroupProfile\",\r\n    data() {\r\n        return {\r\n            crowds: [{\r\n                \"crowd_id\": -1,\r\n                \"crowd_name\": \"全部用户\"\r\n            }],\r\n            crowd_id: null,\r\n            radars: null,\r\n            stack_bar_label: null,\r\n            bar_label: null,\r\n            pie_label: null,\r\n\r\n            behavior_duration_chart: null,\r\n            pie_chart_1: null,\r\n            pie_chart_2: null,\r\n            pie_chart_3: null,\r\n            pie_chart_4: null,\r\n            stack_bar_chart: null,\r\n            bar_chart: null,\r\n        }\r\n    },\r\n    created() {\r\n        this.load_crowds()\r\n    },\r\n    mounted(){\r\n        this.behavior_duration_chart = echarts.init(this.$refs.behavior_duration_chart,null, {renderer: 'svg'})\r\n        this.pie_chart_1 = echarts.init(this.$refs.pie_chart_1,null, {renderer: 'svg'})\r\n        this.pie_chart_2 = echarts.init(this.$refs.pie_chart_2,null, {renderer: 'svg'})\r\n        this.pie_chart_3 = echarts.init(this.$refs.pie_chart_3,null, {renderer: 'svg'})\r\n        this.pie_chart_4 = echarts.init(this.$refs.pie_chart_4,null, {renderer: 'svg'})\r\n        this.stack_bar_chart = echarts.init(this.$refs.stack_bar_chart,null, {renderer: 'svg'})\r\n        this.bar_chart = echarts.init(this.$refs.bar_chart,null, {renderer: 'svg'})\r\n    },\r\n    methods: {\r\n        load_crowds() {\r\n            request.get(\"/api/crowds\").then(res => {\r\n                console.log(res)\r\n                if (res.status_code === 0) {\r\n                    this.crowds.push.apply(this.crowds, res.crowds)\r\n                } else {\r\n                    this.$message({\r\n                        type: \"error\",\r\n                        message: res.status_msg\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        load_crowd_profile() {\r\n            request.get(\"/api/group_profile/\" + this.crowd_id).then(res => {\r\n                console.log(res)\r\n                if (res.status_code === 0) {\r\n                    this.radars = res.radars\r\n                    this.stack_bar_label = res.stack_bar_label\r\n                    this.pie_label = res.pie_label\r\n                    this.bar_label = res.bar_label\r\n                    this.behavior_duration_chart.clear()\r\n                    this.pie_chart_1.clear()\r\n                    this.pie_chart_2.clear()\r\n                    this.pie_chart_3.clear()\r\n                    this.pie_chart_4.clear()\r\n                    this.stack_bar_chart.clear()\r\n                    this.bar_chart.clear()\r\n                    this.set_radar()\r\n                    this.set_pie_chart()\r\n                    this.set_stack_bar_chart()\r\n                    this.set_bar_chart()\r\n                } else {\r\n                    this.$message({\r\n                        type: \"error\",\r\n                        message: res.status_msg\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        set_radar() {\r\n            let indicator = new Array()\r\n            let appDuration = new Array()\r\n            let userDuration = new Array()\r\n            for (let i = 0; i < this.radars.length; i++) {\r\n                let radar = this.radars[i]\r\n                indicator.push({\r\n                name: radar.name,\r\n                max: radar.max,\r\n                })\r\n                appDuration.push(radar.ave)\r\n                userDuration.push(radar.cur)\r\n            }\r\n\r\n            let option = {\r\n                // toolbox: {\r\n                //     show: true,\r\n                //     feature: {\r\n                //         mark: {show: true},\r\n                //         saveAsImage: {show: true},\r\n                //     }\r\n                // },\r\n                title: {\r\n                    text: '行为时长',\r\n                },\r\n                legend: {\r\n                    right: \"0\",\r\n                    data: ['应用平均时长', '人群平均时长']\r\n                },\r\n                radar: {\r\n                    radius: 99,\r\n                    indicator: indicator,\r\n                    name: {\r\n                        textStyle: {\r\n                        color: '#333',\r\n                        fontSize: 14\r\n                        }\r\n                    },\r\n                    splitLine: {\r\n                        lineStyle: {\r\n                        color: '#999'\r\n                        }\r\n                    },\r\n                    splitArea: {\r\n                        areaStyle: {\r\n                        color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\r\n                        }\r\n                    },\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                        color: '#999'\r\n                        }\r\n                    },\r\n                },\r\n                series: [\r\n                {\r\n                    name: 'Budget vs spending',\r\n                    type: 'radar',\r\n                    lineStyle: {\r\n                    width: 2\r\n                    },\r\n                    data: [\r\n                    {\r\n                        value: appDuration,\r\n                        name: \"应用平均时长\",\r\n                    },\r\n                    {\r\n                        value: userDuration,\r\n                        name: \"人群平均时长\",\r\n                    }\r\n                    ]\r\n                }\r\n                ]\r\n            }\r\n\r\n            if (this.crowd_id == -1) {\r\n                option.data = [\"应用平均时长\"]\r\n                option.series[0].data = [option.series[0].data[0]]\r\n            }\r\n            this.behavior_duration_chart.setOption(option)\r\n        },\r\n        set_pie_chart() {\r\n            if (this.pie_label == null || this.pie_label.length < 1) {\r\n                return \r\n            }\r\n            let option1 = {\r\n                // toolbox: {\r\n                //     show: true,\r\n                //     feature: {\r\n                //         mark: {show: true},\r\n                //         saveAsImage: {show: true},\r\n                //     }\r\n                // },\r\n                tooltip: {\r\n                    trigger: 'item'\r\n                },\r\n                title: {\r\n                    text: this.pie_label[0].label_name,\r\n                    left: 'auto'\r\n                },\r\n                series: [\r\n                    {\r\n                        type: 'pie',\r\n                        radius: ['40%', '70%'],\r\n                        center: ['50%', '60%'],\r\n                        avoidLabelOverlap: false,\r\n                        itemStyle: {\r\n                            borderRadius: 10,\r\n                            borderColor: '#fff',\r\n                            borderWidth: 2\r\n                        },\r\n                        label: {\r\n                            normal: {\r\n                                position: \"inside\"//此处将展示的文字在内部展示\r\n                            }\r\n                        },\r\n                        data: this.pie_label[0].data,\r\n                    }\r\n                ]\r\n            }\r\n            this.pie_chart_1.setOption(option1)\r\n\r\n            if (this.pie_label.length < 2) {\r\n                return \r\n            }\r\n            let option2 = {\r\n                // toolbox: {\r\n                //     show: true,\r\n                //     feature: {\r\n                //         mark: {show: true},\r\n                //         saveAsImage: {show: true},\r\n                //     }\r\n                // },\r\n                tooltip: {\r\n                    trigger: 'item'\r\n                },\r\n                title: {\r\n                    text: this.pie_label[1].label_name,\r\n                    left: 'auto'\r\n                },\r\n                series: [\r\n                    {\r\n                        type: 'pie',\r\n                        radius: ['40%', '70%'],\r\n                        center: ['50%', '60%'],\r\n                        avoidLabelOverlap: false,\r\n                        itemStyle: {\r\n                            borderRadius: 10,\r\n                            borderColor: '#fff',\r\n                            borderWidth: 2\r\n                        },\r\n                        label: {\r\n                            normal: {\r\n                                position: \"inside\"//此处将展示的文字在内部展示\r\n                            }\r\n                        },\r\n                        data: this.pie_label[1].data,\r\n                    }\r\n                ]\r\n            }\r\n            this.pie_chart_2.setOption(option2)\r\n\r\n            if (this.pie_label.length < 3) {\r\n                return \r\n            }\r\n            let option3 = {\r\n                // toolbox: {\r\n                //     show: true,\r\n                //     feature: {\r\n                //         mark: {show: true},\r\n                //         saveAsImage: {show: true},\r\n                //     }\r\n                // },\r\n                tooltip: {\r\n                    trigger: 'item'\r\n                },\r\n                title: {\r\n                    text: this.pie_label[2].label_name,\r\n                    left: 'auto'\r\n                },\r\n                series: [\r\n                    {\r\n                        type: 'pie',\r\n                        radius: ['40%', '70%'],\r\n                        center: ['50%', '60%'],\r\n                        avoidLabelOverlap: false,\r\n                        itemStyle: {\r\n                            borderRadius: 10,\r\n                            borderColor: '#fff',\r\n                            borderWidth: 2\r\n                        },\r\n                        label: {\r\n                            normal: {\r\n                                position: \"inside\"//此处将展示的文字在内部展示\r\n                            }\r\n                        },\r\n                        data: this.pie_label[2].data,\r\n                    }\r\n                ]\r\n            }\r\n            this.pie_chart_3.setOption(option3)\r\n\r\n            if (this.pie_label.length < 4) {\r\n                return \r\n            }\r\n            let option4 = {\r\n                // toolbox: {\r\n                //     show: true,\r\n                //     feature: {\r\n                //         mark: {show: true},\r\n                //         saveAsImage: {show: true},\r\n                //     }\r\n                // },\r\n                tooltip: {\r\n                    trigger: 'item'\r\n                },\r\n                title: {\r\n                    text: this.pie_label[3].label_name,\r\n                    left: 'auto'\r\n                },\r\n                series: [\r\n                    {\r\n                        type: 'pie',\r\n                        radius: ['40%', '70%'],\r\n                        center: ['50%', '60%'],\r\n                        avoidLabelOverlap: false,\r\n                        itemStyle: {\r\n                            borderRadius: 10,\r\n                            borderColor: '#fff',\r\n                            borderWidth: 2\r\n                        },\r\n                        label: {\r\n                            normal: {\r\n                                position: \"inside\"//此处将展示的文字在内部展示\r\n                            }\r\n                        },\r\n                        data: this.pie_label[3].data,\r\n                    }\r\n                ]\r\n            }\r\n            this.pie_chart_4.setOption(option4)\r\n        },\r\n        set_stack_bar_chart() {\r\n            let series = new Array()\r\n            let x = this.stack_bar_label.label_value_desc;\r\n            for (let i = 0; i < this.stack_bar_label.label_value_desc.length; i++) {\r\n                series.push({\r\n                    name: this.stack_bar_label.label_value_desc[i],\r\n                    type: 'bar',\r\n                    stack: 'common',\r\n                    emphasis: {\r\n                        focus: 'series'\r\n                    },\r\n                    data: this.stack_bar_label.label_cnt[i],\r\n                    label: {\r\n                        show: true,\r\n                        position: 'inside',\r\n                        // formatter: '{a} {b} {c}: {@score}'\r\n                        formatter: function (params) {\r\n                            //console.log(params)\r\n                            //console.log(x.indexOf(params.seriesName))\r\n                            if (x.indexOf(params.seriesName) > -1 && params.data > 0) {\r\n                                return params.seriesName\r\n                            }\r\n                            return \"\";\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            //console.log(series)\r\n            let option = {\r\n                toolbox: {\r\n                    show: true,\r\n                    feature: {\r\n                        mark: {show: true},\r\n                        saveAsImage: {show: true},\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                },\r\n                title: {\r\n                    text: '自定义标签',\r\n                },\r\n                xAxis: [\r\n                    {\r\n                        type: 'category',\r\n                        data: this.stack_bar_label.label_names,\r\n                        axisLabel: {\r\n                            interval:0,\r\n                            rotate:15\r\n                        }\r\n                    }\r\n                ],\r\n                yAxis: [\r\n                    {\r\n                        name: '用户数',\r\n                        type: 'value',\r\n                        nameLocation: 'center',\r\n                        nameGap: 30,\r\n                    }\r\n                ],\r\n                series: series,\r\n            }\r\n\r\n            this.stack_bar_chart.setOption(option)\r\n        },\r\n        set_bar_chart() {\r\n            let option = {\r\n                // toolbox: {\r\n                //     show: true,\r\n                //     feature: {\r\n                //         mark: {show: true},\r\n                //         saveAsImage: {show: true},\r\n                //     }\r\n                // },\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                    type: 'shadow'\r\n                    }\r\n                },\r\n                title: {\r\n                    text: '使用时间段',\r\n                    left: '0',\r\n                },\r\n                xAxis: [\r\n                    {\r\n                        name: \"小时\",\r\n                        type: 'category',\r\n                        data: this.bar_label.x_names,\r\n                        axisTick: {\r\n                            alignWithLabel: true\r\n                        },\r\n                        \r\n                    }\r\n                ],\r\n                yAxis: [\r\n                    {\r\n                        name: '用户数',\r\n                        type: 'value',\r\n                        nameLocation: 'center',\r\n                        nameGap: 30,\r\n                    }\r\n                ],\r\n                grid: {\r\n                    left: '10%',\r\n                    right: '15%',\r\n                    bottom: '3%',\r\n                    containLabel: true\r\n                },\r\n                series: [\r\n                    {\r\n                        name: 'Direct',\r\n                        type: 'bar',\r\n                        barWidth: '60%',\r\n                        data: this.bar_label.data,\r\n                        showBackground: true,\r\n                        backgroundStyle: {\r\n                            color: 'rgba(180, 180, 180, 0.2)'\r\n                        },\r\n                        itemStyle: {\r\n                            normal: {\r\n                            //这里是重点\r\n                            color: function(params) {\r\n                                var colorList = ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83', '#ca8622'];\r\n                                // var colorList = ['#c23531','#2f4554', '#61a0a8'];\r\n                                // 自动循环已经有的颜色\r\n                                return colorList[params.dataIndex % colorList.length];\r\n                            }\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n            this.bar_chart.setOption(option)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n}\r\n\r\n\r\n\r\n.top-1 {\r\n  top: 50px;\r\n  left: 0px;\r\n  position: absolute;\r\n  width: 200px;\r\n  height: 200px;\r\n  /* background-color: rgb(217, 235, 238); */\r\n}\r\n.top-2 {\r\n  top: 50px;\r\n  left: 240px;\r\n  position: absolute;\r\n  width: 200px;\r\n  height: 200px;\r\n  /* background-color: rgb(217, 235, 238); */\r\n}\r\n.top-3 {\r\n  top: 50px;\r\n  left: 480px;\r\n  position: absolute;\r\n  width: 200px;\r\n  height: 200px;\r\n  /* background-color: rgb(217, 235, 238); */\r\n}\r\n.top-4 {\r\n  top: 50px;\r\n  left: 720px;\r\n  position: absolute;\r\n  width: 200px;\r\n  height: 200px;\r\n  /* background-color: rgb(217, 235, 238); */\r\n}\r\n\r\n.top-5 {\r\n  top: 50px;\r\n  left: 960px;\r\n  position: absolute;\r\n  width: 300px;\r\n  height: 250px;\r\n  /* background-color: rgb(217, 235, 238); */\r\n}\r\n\r\n.bottom-1 {\r\n  position: absolute;\r\n  bottom: 50px;\r\n  left: 0px;\r\n  width: 1000px;\r\n  height: 400px;\r\n  /* background-color: rgb(192, 167, 167); */\r\n}\r\n.circle {\r\n  position: absolute;\r\n  bottom: 50px;\r\n  left: 960px;\r\n  width: 350px;\r\n  height: 350px;\r\n  /* background-color: rgb(224, 217, 217); */\r\n}\r\n\r\n</style>"],"sourceRoot":""}]}